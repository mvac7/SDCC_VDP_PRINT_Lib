                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.0 #11195 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module VDP_VPRINT
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _CopyToVRAM
                             12 	.globl _CSTATE
                             13 	.globl _GetVRAMaddressByPosition
                             14 	.globl _VPRINT
                             15 	.globl _VPRINTN
                             16 	.globl _VPrintString
                             17 	.globl _VPrintNumber
                             18 	.globl _VPrintNum
                             19 	.globl _num2Dec16
                             20 ;--------------------------------------------------------
                             21 ; special function registers
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ; ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DATA
   0000                      27 _CSTATE::
   0000                      28 	.ds 1
                             29 ;--------------------------------------------------------
                             30 ; ram data
                             31 ;--------------------------------------------------------
                             32 	.area _INITIALIZED
                             33 ;--------------------------------------------------------
                             34 ; absolute external ram data
                             35 ;--------------------------------------------------------
                             36 	.area _DABS (ABS)
                             37 ;--------------------------------------------------------
                             38 ; global & static initialisations
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _GSINIT
                             42 	.area _GSFINAL
                             43 	.area _GSINIT
                             44 ;--------------------------------------------------------
                             45 ; Home
                             46 ;--------------------------------------------------------
                             47 	.area _HOME
                             48 	.area _HOME
                             49 ;--------------------------------------------------------
                             50 ; code
                             51 ;--------------------------------------------------------
                             52 	.area _CODE
                             53 ;src\VDP_VPRINT.c:32: unsigned int GetVRAMaddressByPosition(char column, char line)
                             54 ;	---------------------------------
                             55 ; Function GetVRAMaddressByPosition
                             56 ; ---------------------------------
   0000                      57 _GetVRAMaddressByPosition::
   0000 DD E5         [15]   58 	push	ix
   0002 DD 21 00 00   [14]   59 	ld	ix,#0
   0006 DD 39         [15]   60 	add	ix,sp
                             61 ;src\VDP_VPRINT.c:34: return BASE10 + (line*32)+column;
   0008 DD 6E 05      [19]   62 	ld	l, 5 (ix)
   000B 26 00         [ 7]   63 	ld	h, #0x00
   000D 29            [11]   64 	add	hl, hl
   000E 29            [11]   65 	add	hl, hl
   000F 29            [11]   66 	add	hl, hl
   0010 29            [11]   67 	add	hl, hl
   0011 29            [11]   68 	add	hl, hl
   0012 01 00 18      [10]   69 	ld	bc, #0x1800
   0015 09            [11]   70 	add	hl, bc
   0016 DD 4E 04      [19]   71 	ld	c, 4 (ix)
   0019 06 00         [ 7]   72 	ld	b, #0x00
   001B 09            [11]   73 	add	hl, bc
                             74 ;src\VDP_VPRINT.c:35: }
   001C DD E1         [14]   75 	pop	ix
   001E C9            [10]   76 	ret
                             77 ;src\VDP_VPRINT.c:47: void VPRINT(char column, char line, char* text)
                             78 ;	---------------------------------
                             79 ; Function VPRINT
                             80 ; ---------------------------------
   001F                      81 _VPRINT::
                             82 ;src\VDP_VPRINT.c:49: unsigned int vaddr = GetVRAMaddressByPosition(column, line);
   001F 21 03 00      [10]   83 	ld	hl, #3+0
   0022 39            [11]   84 	add	hl, sp
   0023 7E            [ 7]   85 	ld	a, (hl)
   0024 F5            [11]   86 	push	af
   0025 33            [ 6]   87 	inc	sp
   0026 21 03 00      [10]   88 	ld	hl, #3+0
   0029 39            [11]   89 	add	hl, sp
   002A 7E            [ 7]   90 	ld	a, (hl)
   002B F5            [11]   91 	push	af
   002C 33            [ 6]   92 	inc	sp
   002D CDr00r00      [17]   93 	call	_GetVRAMaddressByPosition
   0030 F1            [10]   94 	pop	af
                             95 ;src\VDP_VPRINT.c:50: VPrintString(vaddr, text);
   0031 FD 21 04 00   [14]   96 	ld	iy, #4
   0035 FD 39         [15]   97 	add	iy, sp
   0037 FD 4E 00      [19]   98 	ld	c, 0 (iy)
   003A FD 46 01      [19]   99 	ld	b, 1 (iy)
   003D C5            [11]  100 	push	bc
   003E E5            [11]  101 	push	hl
   003F CDr7Br00      [17]  102 	call	_VPrintString
   0042 F1            [10]  103 	pop	af
   0043 F1            [10]  104 	pop	af
                            105 ;src\VDP_VPRINT.c:51: }
   0044 C9            [10]  106 	ret
                            107 ;src\VDP_VPRINT.c:64: void VPRINTN(char column, char line, char* text, unsigned int length)
                            108 ;	---------------------------------
                            109 ; Function VPRINTN
                            110 ; ---------------------------------
   0045                     111 _VPRINTN::
                            112 ;src\VDP_VPRINT.c:66: unsigned int vaddr = GetVRAMaddressByPosition(column, line);
   0045 21 03 00      [10]  113 	ld	hl, #3+0
   0048 39            [11]  114 	add	hl, sp
   0049 7E            [ 7]  115 	ld	a, (hl)
   004A F5            [11]  116 	push	af
   004B 33            [ 6]  117 	inc	sp
   004C 21 03 00      [10]  118 	ld	hl, #3+0
   004F 39            [11]  119 	add	hl, sp
   0050 7E            [ 7]  120 	ld	a, (hl)
   0051 F5            [11]  121 	push	af
   0052 33            [ 6]  122 	inc	sp
   0053 CDr00r00      [17]  123 	call	_GetVRAMaddressByPosition
   0056 F1            [10]  124 	pop	af
                            125 ;src\VDP_VPRINT.c:67: CopyToVRAM((unsigned int) text, vaddr, length);
   0057 FD 21 04 00   [14]  126 	ld	iy, #4
   005B FD 39         [15]  127 	add	iy, sp
   005D FD 4E 00      [19]  128 	ld	c, 0 (iy)
   0060 FD 46 01      [19]  129 	ld	b, 1 (iy)
   0063 FD 21 06 00   [14]  130 	ld	iy, #6
   0067 FD 39         [15]  131 	add	iy, sp
   0069 FD 5E 00      [19]  132 	ld	e, 0 (iy)
   006C FD 56 01      [19]  133 	ld	d, 1 (iy)
   006F D5            [11]  134 	push	de
   0070 E5            [11]  135 	push	hl
   0071 C5            [11]  136 	push	bc
   0072 CDr00r00      [17]  137 	call	_CopyToVRAM
   0075 21 06 00      [10]  138 	ld	hl, #6
   0078 39            [11]  139 	add	hl, sp
   0079 F9            [ 6]  140 	ld	sp, hl
                            141 ;src\VDP_VPRINT.c:68: }
   007A C9            [10]  142 	ret
                            143 ;src\VDP_VPRINT.c:79: void VPrintString(unsigned int vaddr, char* text)
                            144 ;	---------------------------------
                            145 ; Function VPrintString
                            146 ; ---------------------------------
   007B                     147 _VPrintString::
                            148 ;src\VDP_VPRINT.c:82: while(text[length]) length++;
   007B 1E 00         [ 7]  149 	ld	e, #0x00
   007D                     150 00101$:
   007D 21 04 00      [10]  151 	ld	hl, #4
   0080 39            [11]  152 	add	hl, sp
   0081 7E            [ 7]  153 	ld	a, (hl)
   0082 23            [ 6]  154 	inc	hl
   0083 66            [ 7]  155 	ld	h, (hl)
   0084 6F            [ 4]  156 	ld	l, a
   0085 16 00         [ 7]  157 	ld	d, #0x00
   0087 19            [11]  158 	add	hl, de
   0088 7E            [ 7]  159 	ld	a, (hl)
   0089 B7            [ 4]  160 	or	a, a
   008A 28 03         [12]  161 	jr	Z,00103$
   008C 1C            [ 4]  162 	inc	e
   008D 18 EE         [12]  163 	jr	00101$
   008F                     164 00103$:
                            165 ;src\VDP_VPRINT.c:84: CopyToVRAM((unsigned int) text, vaddr, length);
   008F 16 00         [ 7]  166 	ld	d, #0x00
   0091 21 04 00      [10]  167 	ld	hl, #4
   0094 39            [11]  168 	add	hl, sp
   0095 4E            [ 7]  169 	ld	c, (hl)
   0096 23            [ 6]  170 	inc	hl
   0097 46            [ 7]  171 	ld	b, (hl)
   0098 D5            [11]  172 	push	de
   0099 21 04 00      [10]  173 	ld	hl, #4
   009C 39            [11]  174 	add	hl, sp
   009D 7E            [ 7]  175 	ld	a, (hl)
   009E 23            [ 6]  176 	inc	hl
   009F 66            [ 7]  177 	ld	h, (hl)
   00A0 6F            [ 4]  178 	ld	l, a
   00A1 E5            [11]  179 	push	hl
   00A2 C5            [11]  180 	push	bc
   00A3 CDr00r00      [17]  181 	call	_CopyToVRAM
   00A6 21 06 00      [10]  182 	ld	hl, #6
   00A9 39            [11]  183 	add	hl, sp
   00AA F9            [ 6]  184 	ld	sp, hl
                            185 ;src\VDP_VPRINT.c:85: }
   00AB C9            [10]  186 	ret
                            187 ;src\VDP_VPRINT.c:99: void VPrintNumber(char column, char line, unsigned int value, char length)
                            188 ;	---------------------------------
                            189 ; Function VPrintNumber
                            190 ; ---------------------------------
   00AC                     191 _VPrintNumber::
                            192 ;src\VDP_VPRINT.c:101: unsigned int vaddr = GetVRAMaddressByPosition(column, line);
   00AC 21 03 00      [10]  193 	ld	hl, #3+0
   00AF 39            [11]  194 	add	hl, sp
   00B0 7E            [ 7]  195 	ld	a, (hl)
   00B1 F5            [11]  196 	push	af
   00B2 33            [ 6]  197 	inc	sp
   00B3 21 03 00      [10]  198 	ld	hl, #3+0
   00B6 39            [11]  199 	add	hl, sp
   00B7 7E            [ 7]  200 	ld	a, (hl)
   00B8 F5            [11]  201 	push	af
   00B9 33            [ 6]  202 	inc	sp
   00BA CDr00r00      [17]  203 	call	_GetVRAMaddressByPosition
   00BD F1            [10]  204 	pop	af
   00BE 4D            [ 4]  205 	ld	c, l
   00BF 44            [ 4]  206 	ld	b, h
                            207 ;src\VDP_VPRINT.c:103: VPrintNum(vaddr, value, length);
   00C0 21 06 00      [10]  208 	ld	hl, #6+0
   00C3 39            [11]  209 	add	hl, sp
   00C4 7E            [ 7]  210 	ld	a, (hl)
   00C5 F5            [11]  211 	push	af
   00C6 33            [ 6]  212 	inc	sp
   00C7 21 05 00      [10]  213 	ld	hl, #5
   00CA 39            [11]  214 	add	hl, sp
   00CB 7E            [ 7]  215 	ld	a, (hl)
   00CC 23            [ 6]  216 	inc	hl
   00CD 66            [ 7]  217 	ld	h, (hl)
   00CE 6F            [ 4]  218 	ld	l, a
   00CF E5            [11]  219 	push	hl
   00D0 C5            [11]  220 	push	bc
   00D1 CDrD8r00      [17]  221 	call	_VPrintNum
   00D4 F1            [10]  222 	pop	af
   00D5 F1            [10]  223 	pop	af
   00D6 33            [ 6]  224 	inc	sp
                            225 ;src\VDP_VPRINT.c:104: }
   00D7 C9            [10]  226 	ret
                            227 ;src\VDP_VPRINT.c:116: void VPrintNum(unsigned int vaddr, unsigned int value, char length)
                            228 ;	---------------------------------
                            229 ; Function VPrintNum
                            230 ; ---------------------------------
   00D8                     231 _VPrintNum::
   00D8 DD E5         [15]  232 	push	ix
   00DA DD 21 00 00   [14]  233 	ld	ix,#0
   00DE DD 39         [15]  234 	add	ix,sp
   00E0 21 FA FF      [10]  235 	ld	hl, #-6
   00E3 39            [11]  236 	add	hl, sp
   00E4 F9            [ 6]  237 	ld	sp, hl
                            238 ;src\VDP_VPRINT.c:119: char text[]="     ";
   00E5 21 00 00      [10]  239 	ld	hl, #0
   00E8 39            [11]  240 	add	hl, sp
   00E9 EB            [ 4]  241 	ex	de, hl
   00EA 3E 20         [ 7]  242 	ld	a, #0x20
   00EC 12            [ 7]  243 	ld	(de), a
   00ED 6B            [ 4]  244 	ld	l, e
   00EE 62            [ 4]  245 	ld	h, d
   00EF 23            [ 6]  246 	inc	hl
   00F0 36 20         [10]  247 	ld	(hl), #0x20
   00F2 6B            [ 4]  248 	ld	l, e
   00F3 62            [ 4]  249 	ld	h, d
   00F4 23            [ 6]  250 	inc	hl
   00F5 23            [ 6]  251 	inc	hl
   00F6 36 20         [10]  252 	ld	(hl), #0x20
   00F8 6B            [ 4]  253 	ld	l, e
   00F9 62            [ 4]  254 	ld	h, d
   00FA 23            [ 6]  255 	inc	hl
   00FB 23            [ 6]  256 	inc	hl
   00FC 23            [ 6]  257 	inc	hl
   00FD 36 20         [10]  258 	ld	(hl), #0x20
   00FF 21 04 00      [10]  259 	ld	hl, #0x0004
   0102 19            [11]  260 	add	hl, de
   0103 36 20         [10]  261 	ld	(hl), #0x20
   0105 21 05 00      [10]  262 	ld	hl, #0x0005
   0108 19            [11]  263 	add	hl, de
   0109 36 00         [10]  264 	ld	(hl), #0x00
                            265 ;src\VDP_VPRINT.c:121: num2Dec16(value, text); 
   010B 4B            [ 4]  266 	ld	c, e
   010C 42            [ 4]  267 	ld	b, d
   010D D5            [11]  268 	push	de
   010E C5            [11]  269 	push	bc
   010F DD 6E 06      [19]  270 	ld	l, 6 (ix)
   0112 DD 66 07      [19]  271 	ld	h, 7 (ix)
   0115 E5            [11]  272 	push	hl
   0116 CDr45r01      [17]  273 	call	_num2Dec16
   0119 F1            [10]  274 	pop	af
   011A F1            [10]  275 	pop	af
   011B D1            [10]  276 	pop	de
                            277 ;src\VDP_VPRINT.c:124: CopyToVRAM((unsigned int) text + (5-length), vaddr, length);
   011C DD 4E 08      [19]  278 	ld	c, 8 (ix)
   011F 06 00         [ 7]  279 	ld	b, #0x00
   0121 DD 6E 08      [19]  280 	ld	l, 8 (ix)
   0124 26 00         [ 7]  281 	ld	h, #0x00
   0126 3E 05         [ 7]  282 	ld	a, #0x05
   0128 95            [ 4]  283 	sub	a, l
   0129 6F            [ 4]  284 	ld	l, a
   012A 3E 00         [ 7]  285 	ld	a, #0x00
   012C 9C            [ 4]  286 	sbc	a, h
   012D 67            [ 4]  287 	ld	h, a
   012E 19            [11]  288 	add	hl, de
   012F C5            [11]  289 	push	bc
   0130 DD 4E 04      [19]  290 	ld	c, 4 (ix)
   0133 DD 46 05      [19]  291 	ld	b, 5 (ix)
   0136 C5            [11]  292 	push	bc
   0137 E5            [11]  293 	push	hl
   0138 CDr00r00      [17]  294 	call	_CopyToVRAM
   013B 21 06 00      [10]  295 	ld	hl, #6
   013E 39            [11]  296 	add	hl, sp
   013F F9            [ 6]  297 	ld	sp, hl
                            298 ;src\VDP_VPRINT.c:125: }
   0140 DD F9         [10]  299 	ld	sp, ix
   0142 DD E1         [14]  300 	pop	ix
   0144 C9            [10]  301 	ret
                            302 ;src\VDP_VPRINT.c:136: void num2Dec16(unsigned int aNumber, char *address) __naked
                            303 ;	---------------------------------
                            304 ; Function num2Dec16
                            305 ; ---------------------------------
   0145                     306 _num2Dec16::
                            307 ;src\VDP_VPRINT.c:198: __endasm;
   0145 DD E5         [15]  308 	push	IX
   0147 DD 21 00 00   [14]  309 	ld	IX,#0
   014B DD 39         [15]  310 	add	IX,SP
   014D DD 6E 04      [19]  311 	ld	L,4(ix)
   0150 DD 66 05      [19]  312 	ld	H,5(ix)
   0153 DD 5E 06      [19]  313 	ld	E,6(ix)
   0156 DD 56 07      [19]  314 	ld	D,7(ix)
   0159 3E 20         [ 7]  315 	ld	A,#32 ;ASCII value for space
   015B 32r00r00      [13]  316 	ld	(#_CSTATE),A
   015E 01 F0 D8      [10]  317 	ld	BC,#-10000
   0161 CDr7Cr01      [17]  318 	call	$Num1
   0164 01 18 FC      [10]  319 	ld	BC,#-1000
   0167 CDr7Cr01      [17]  320 	call	$Num1
   016A 01 9C FF      [10]  321 	ld	BC,#-100
   016D CDr7Cr01      [17]  322 	call	$Num1
   0170 0E F6         [ 7]  323 	ld	C,#-10
   0172 CDr7Cr01      [17]  324 	call	$Num1
   0175 48            [ 4]  325 	ld	C,B
   0176 CDr7Cr01      [17]  326 	call	$Num1
                            327 ;END
   0179 DD E1         [14]  328 	pop	IX
   017B C9            [10]  329 	ret
   017C                     330 	$Num1:
   017C 3E 2F         [ 7]  331 	ld	A,#47 ; 0 ASCII char - 1
   017E                     332 	$Num2:
   017E 3C            [ 4]  333 	inc	A
   017F 09            [11]  334 	add	HL,BC
   0180 38 FC         [12]  335 	jr	C,$Num2
   0182 ED 42         [15]  336 	sbc	HL,BC
   0184 FE 30         [ 7]  337 	cp	#48
   0186 20 05         [12]  338 	jr	NZ,$Num3 ;if A!=0 then goto $Num3
   0188 3Ar00r00      [13]  339 	ld	A,(#_CSTATE)
   018B 18 07         [12]  340 	jr	$Num4
   018D                     341 	$Num3:
   018D F5            [11]  342 	push	AF
   018E 3E 30         [ 7]  343 	ld	A,#48 ;ASCII value for 0
   0190 32r00r00      [13]  344 	ld	(#_CSTATE),A
   0193 F1            [10]  345 	pop	AF
   0194                     346 	$Num4:
   0194 12            [ 7]  347 	ld	(DE),A
   0195 13            [ 6]  348 	inc	DE
   0196 C9            [10]  349 	ret
                            350 ;src\VDP_VPRINT.c:199: }
                            351 	.area _CODE
                            352 	.area _INITIALIZER
                            353 	.area _CABS (ABS)
